<?xml version="1.0" ?>
<%
    wheel_radius = 1.0
    wheel_length = 0.4
    axis_length = 4.0
    pad_length = wheel_length/4
    pad_radius = wheel_radius/2
    bin_height = 1.0
    bin_width = wheel_length
    bin_length = 2*wheel_radius

    no_rotation = [0, 0, 0]

    #global variables for positions and rotations
    x0 = 0.0
    z0 = wheel_radius+bin_height/2 #wheel should touch binary
    y0 = 0.0
    roll = 0.0
    pitch = Math::PI/2
    yaw = Math::PI/2

    initial_pos = [x0, y0, 0.0]

    lp_x0 = rp_x0 = x0
    lp_y0 = -3*pad_length/2 + axis_length/3
    lp_z0 = rp_z0 = z0
    lp_r = rp_r = roll
    lp_p = rp_p = pitch
    lp_y = rp_y = yaw

    left_pad_arr = [lp_x0, lp_y0, lp_z0, lp_r, lp_p, lp_y]

    rp_y0 = 3*pad_length/2 + axis_length*2/3
    right_pad_arr = [rp_x0, rp_y0, rp_z0, rp_r, rp_p, rp_y]

    #colors
    red = [1.0, 0.0, 0.0, 1]
    green = [0.0, 1.0, 0.0, 1]

%>
<sdf version="1.5">
  <model name="pads_model">
    <static>true</static> 
    <link name="right_pad">
        <pose><%= right_pad_arr.join(" ") %></pose>
        <collision name="collision">
            <geometry>
                <cylinder>
                    <radius><%= pad_radius %></radius>
                    <length><%= pad_length %></length>
                </cylinder>
            </geometry>
        </collision>
        <visual name="visual">
            <geometry>
                <cylinder>
                    <radius><%= pad_radius %></radius>
                    <length><%= pad_length %></length>
                </cylinder>
            </geometry>
            <material>
                <ambient><%= red.join() %></ambient>
            </material>
        </visual>
    </link>
    <link name='left_pad'>
        <pose><%= left_pad_arr.join(" ")%></pose>
        <collision name='collision'>
            <geometry>
                <cylinder>
                    <radius><%= pad_radius %></radius>
                    <length><%= pad_length %></length>
                </cylinder>
            </geometry>
        </collision>
        <visual name='visual'>
            <geometry>
                <cylinder>
                    <radius><%= pad_radius %></radius>
                    <length><%= pad_length %></length>
                </cylinder>
            </geometry>
            <material>
                <ambient><%= red.join() %></ambient>
            </material>
        </visual>
    </link> 
  </model>
</sdf>
